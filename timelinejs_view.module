<?php

/**
 * Implement hook_menu().
 */
function timelinejs_view_menu() {
  $items['json'] = array(
    'title' => t('rewrite'),
    'page callback' => 'rewrite',
    'access arguments' => array('access administration pages'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/content/timelinejs_config'] = array(
    'title' => t('TimelineJS Configuration'),
    'description' => t('Configuration for TimelineJS'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('timelinejs_view_config_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Page callback: TimelineJS Config.
 *
 * @See timelinejs_view_menu()
 */
function timelinejs_view_config_form($form, &$form_state){
  $form['general_settings'] = array(
    '#type' => 'fieldset',
    '#collabsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('General Config'),
    '#description' => t('Configuration for TimelineJS')
  );
  $form['general_settings']['timelinejs_view_number_of_blocks'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of block'),
    '#default_value' => variable_get('timelinejs_view_number_of_blocks', '2'),
    '#description' => t('Please specify the number of blocks of Timelines you wisht to use'),
    '#required' => TRUE
  );
  return system_settings_form($form);
}


/**
 * Implement hook_block_info().
 */
function timelinejs_view_block_info(){
  $number_of_blocks = variable_get('timelinejs_view_number_of_blocks', '2');
  for($i=1; $i<=$number_of_blocks; $i++) {
    $blocks['timelinejs_view_'.$i] = array(
      'info' => t('Display Timeline '.$i),
    );
  }
  return $blocks;
}

/**
 * Implement hook_block_configure().
 */
function timelinejs_view_block_configure($delta){
  $form = array();
  $number_of_blocks = variable_get('timelinejs_view_number_of_blocks', '2');
  for($i=1; $i<=$number_of_blocks; $i++){
    if($delta === 'timelinejs_view_'.$i){
      $form['timelinejs_view_headline_'.$i] = array(
        '#type' => 'textfield',
        '#title' => t('Headline'),
        '#size' => 60,
        '#description' => t('Headline for timeline'),
        '#default_value' => variable_get('timelinejs_view_headline_'.$i, 'Headline'),
        '#required' => TRUE,
      );
    }
  }
  return $form;
}

/**
 * Implement hook_block_save().
 */
function timelinejs_view_block_save($delta = '', $edit = array()){
  $number_of_blocks = variable_get('timelinejs_view_number_of_blocks', '2');
  for($i=1; $i<=$number_of_blocks; $i++){
    if($delta === 'timelinejs_view_'.$i){
      variable_set('timelinejs_view_headline_'.$i, $edit['timelinejs_view_headline_'.$i]);
    }
  }
}

function rewrite(){
  $dates = _timelinejs_view_dates_generator();
  $era =  _timelinejs_view_era_generator();
  $headline = variable_get('timelinejs_view_headline', 'This is a test');

  $timeline = '{"timeline":';
  $timeline .= '{';
  $timeline .= '"headline":"'. $headline .'",';
  $timeline .= '"type":"default",';
  $timeline .= '"text":"<p>Intro parra.</p>",';
  $timeline .= $dates;
  $timeline .= ','.$era;
  $timeline .= '}}'; 

  echo($timeline);
}

function _timelinejs_view_dates_generator() {
  $type = 'timelinejs_dates';
  $nodes = node_load_multiple(array(), array('type' => $type));
  $dateJson = '"date":[';
  foreach($nodes as $date){
    $entry = new stdClass(); 
    $entry->startDate = date('Y,m,d', strtotime($date->field_dates['und'][0]['value']));
    $entry->endDate = date('Y,m,d', strtotime($date->field_dates['und'][0]['value2']));
    $entry->headline = $date->title;
    $entry->text = $date->body['und'][0]['safe_value'];
    $entry->text = str_replace(PHP_EOL, '', $entry->text);
    if(isset($date->field_timeline_category['und'][0]['tid'])){
      $entry->tag = taxonomy_term_load($date->field_timeline_category['und'][0]['tid'])->name;
    }
    if(isset($date->field_media['und'][0]['fid'])){
      $image = file_load($date->field_media['und'][0]['fid']); 
      $entry->asset->media = file_create_url($image->uri);
      $entry->asset->thumbnail = image_style_url('timelinejs_thumb', $image->uri);
    }
    if(isset($date->field_media_url['und'][0]['value'])){
      $entry->asset->media_url = $date->field_media_url['und'][0]['value'];
    }
    if(isset($date->field_media_caption['und'][0]['value'])){
      $entry->asset->caption = $date->field_media_caption['und'][0]['value'];
    }
    if(isset($date->field_media_credit['und'][0]['value'])){
      $entry->asset->credit = $date->field_media_credit['und'][0]['value'];
    }
    if(isset($date->field_custom_class_name['und'][0]['value'])){
      $entry->class = $date->field_custom_class_name['und'][0]['value'];
    }
    $dateJson .= '{"startDate":"' . $entry->startDate .'",';
    $dateJson .= '"endDate":"' . $entry->endDate .'",';
    $dateJson .= '"headline":"' . $entry->headline .'",';
    $dateJson .= '"text":"' . $entry->text .'"';

    if(isset($entry->tag)){
      $dateJson .= ',"tag":"' . $entry->tag .'"';
    }
    if(isset($entry->class)){
      $dateJson .= ',"classname":"'.$entry->class .'"';
    }

    if(isset($entry->asset->media)){
      $dateJson .= ',"asset":{';
      $dateJson .= '"media":"'.$entry->asset->media.'"';
      $dateJson .= ',"thumbnail":"'.$entry->asset->thumbnail.'"';

      if(!isset($entry->asset->caption) && !isset($entry->asset->credit)){
        $dateJson .= '}';
      } elseif(isset($entry->asset->caption)){
          $dateJson .= ',"caption":"'.$entry->asset->caption.'"';
          if(!isset($entry->asset->credit)){
            $dateJson .= '}';
          } else {
            $dateJson .= ',"credit":"'.$entry->asset->credit.'"}';
          }
      } else {
          $dateJson .= ',"credit":"'.$entry->asset->credit.'"}';
        }
    } elseif(isset($entry->asset->media_url)){
      $dateJson .= ',"asset":{';
      $dateJson .= '"media":"'.$entry->asset->media_url.'"';

      if(!isset($entry->asset->caption) && !isset($entry->asset->credit)){
        $dateJson .= '}';
      } elseif(isset($entry->asset->caption)){
          $dateJson .= ',"caption":"'.$entry->asset->caption.'"';
          if(!isset($entry->asset->credit)){
            $dateJson .= '}';
          } else {
            $dateJson .= ',"credit":"'.$entry->asset->credit.'"}';
          }
      } else {
          $dateJson .= ',"credit":"'.$entry->asset->credit.'"}';
        }
    }

    if($date === end($nodes)){
      $dateJson .= '}]';
    } else {
      $dateJson .= '},';
    }
  }
  return $dateJson;
}

function _timelinejs_view_era_generator() {
  $type = 'timelinejs_era';
  $nodes = node_load_multiple(array(), array('type' => $type));
  $eraJson = '"era":[';
  foreach($nodes as $era){
    $entry = new stdClass();
    $entry->startDate = date('Y,m,d', strtotime($era->field_dates['und'][0]['value']));
    $entry->endDate = date('Y,m,d', strtotime($era->field_dates['und'][0]['value2']));
    $entry->headline = $era->title;
    $entry->text = $era->body['und'][0]['safe_value'];
    $entry->text = str_replace(PHP_EOL, '', $entry->text);
    if(isset($era->field_timeline_category['und'][0]['tid'])){
      $entry->tag = taxonomy_term_load($era->field_timeline_category['und'][0]['tid'])->name;
    }

    $eraJson .= '{"startDate":"' . $entry->startDate . '",';
    $eraJson .= '"endDate":"' . $entry->endDate .'",';
    $eraJson .= '"headline":"' . $entry->headline .'",';
    $eraJson .= '"text":"' . $entry->text .'"';
    if(isset($entry->tag)){
      $eraJson .= ',"tag":"' . $entry->tag .'"';
    }

    if($era === end($nodes)){
      $eraJson .= '}]';
    } else {
      $eraJson .= '},';
    }
  }
  return $eraJson;
}
